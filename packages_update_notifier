#!/bin/bash


main_init(){
    MIRROR=$(cat $CONFIG | grep '^MIRROR' | cut -d "=" -f2)
    TMP=$(mktemp -dt packages.XXXXXX)
    MIRROR_PKG="$TMP/CHECKSUMS.md5"
    PKG_DIR="/var/log/packages"
    PKG_INSTALL="install_packages.log"
    PKG_REMOTE="remote_packages.log"
    PKG_DIFF="diff_packages.log"
    PKG_UPDATE=$(cat $CONFIG | grep '^PKG_UPDATE' | cut -d "=" -f2)
    BLACKLIST=$(cat $CONFIG | grep '^BLACKLIST' | cut -d "=" -f2)
    ICONS=("/usr/share/icons/oxygen/32x32/status/dialog-information.png" "/usr/share/icons/HighContrast/32x32/status/dialog-information.png")
    INTERVAL=$(cat $CONFIG | grep '^INTERVAL' | cut -d "=" -f2)

    wget -c "${MIRROR}$(echo ${MIRROR} | rev | tr '/' '\n' | head -n 2 | tr '\n' '-' | rev | cut -d '-' -f2 | sed 's:deepstyle:slackware:')/CHECKSUMS.md5" -P $TMP &>/dev/null

    if [[ ! -f ${BLACKLIST} ]]; then 
        touch ${BLACKLIST}
    fi
}




get_name_pkg() {
     [[ ! -z "$1" ]] && echo $(echo $1 | awk '{print $1}')
}

get_ver_pkg() {
    [[ ! -z "$1" ]] && echo $(echo $1 | awk '{print $2}')
}

get_rel_pkg() {
    [[ ! -z "$1" ]] && echo $(echo $1 | awk '{print $4}')
}

fix_pkg() {
    [[ ! -z "$1" ]] && echo $(echo $1 | sed "s#\s#-#g")
}

local_packages() {
    # get instaled packages
    ls ${PKG_DIR} | grep -v "upgraded" | sort | rev \
        | sed -e "s#^\([[:alnum:]]*\)-\([[:alnum:]_]*\)-\([[:alnum:]_.]*\)-\(.*\)#\1\t\2\t\3\t\4#" \
        | rev > ${TMP}/${PKG_INSTALL}
}

remote_packages() {
    # get packages remote
    grep -oP "(?<=\w\/)(.*)(?=\.t.z$)" ${MIRROR_PKG} | sort | rev \
        | sed -e "s#^\([[:alnum:]]*\)-\([[:alnum:]_]*\)-\([[:alnum:]_.]*\)-\(.*\)#\1\t\2\t\3\t\4#" \
        | rev > ${TMP}/${PKG_REMOTE}
}

diff_packages() {
    # get update packages
    diff -Naur ${TMP}/${PKG_INSTALL} ${TMP}/${PKG_REMOTE} > ${TMP}/${PKG_DIFF}.tmp
    cat ${TMP}/${PKG_DIFF}.tmp | grep "^[+-]" | grep -v "^+++\|---" > ${TMP}/${PKG_DIFF}
}

rename_log() {
    if [[ -f  ${PKG_UPDATE} ]]; then 
        mv ${PKG_UPDATE} "${PKG_UPDATE}_$(date +%Y%m%d%H%M%S)"
    fi
}


notify_desktop(){
    if [[ -f ${ICONS[0]} ]]; then  icon=${ICONS[0]}; else icon=${ICONS[1]}; fi

#    notify-send "System Message" "For your system updates available\n<b>${count}</b> packages" -i ${icon}

    for i in $(who | awk '{print $1, $2}' | grep : | uniq);do
        let c=c+1
        if [[ $c == 1 ]];then
            u=$i
        else
            d=$i
        fi
        if [[ $c == 2 ]];then
            c=0
            DISPLAY=$d; XAUTHORITY="$(cat /etc/passwd | grep $u | cut -d ":" -f6)/.Xauthority"; export DISPLAY XAUTHORITY
            su $u -c "notify-send \"System Message\" \"For your system updates available\n<b>${count}</b> packages\" -i ${icon}"
            unset DISPLAY XAUTHORITY
         fi
    done
}


case "$1" in
    "-c")
      CONFIG=${2:-/etc/pun/pun.conf}
      ;;
    *)
      echo "$0 -c <configuration file> &"
      exit 0
      ;;
esac

#exit 0

while true; do

    main_init
    rename_log
    local_packages
    remote_packages
   
    diff_packages

    while read pkg; do
        pkg_remote=$(get_name_pkg "$pkg")
        ver_remote=$(get_ver_pkg "$pkg")
        rel_remote=$(get_rel_pkg "$pkg")

        if [[ ! $(grep -x "$pkg_remote" "$BLACKLIST") && $(awk '{print $1}' ${TMP}/${PKG_DIFF} | grep -x "[+-]$pkg_remote" | wc -l) -ge 2 ]]; then
            num=$(awk '{print $1}' $TMP/$PKG_INSTALL | grep -nx "$pkg_remote" | cut -f1 -d ":")
            pkg_install=$(sed -n -e ${num}p $TMP/$PKG_INSTALL)
            name_install=$(get_name_pkg "$pkg_install")
            ver_install=$(get_ver_pkg "$pkg_install")
            rel_install=$(get_rel_pkg "$pkg_install")

            #echo "pkg:" $pkg_install
            #echo "remote $pkg_remote | $ver_remote | $rel_remote =|= install $name_install | $ver_install | $rel_install"

            if [[ $ver != $ver_install && ! -z $ver_install ]]; then
                ((count++))
                echo -e $(fix_pkg "$pkg_install") "\t" $(fix_pkg "$pkg") >> ${PKG_UPDATE}
            fi
            if [[ $ver == $ver_install && $rel < $rel_install && ! -z $rel_install ]]; then
                ((count++))
                echo -e $(fix_pkg "$pkg_install") "\t" $(fix_pkg "$pkg") >> ${PKG_UPDATE}
            fi
        fi
        # remove the load on the CPU
        sleep 0.2
    # ^+ new packages as remote
    done < <((grep "^+" | sed "s/^[+-]//") < ${TMP}/${PKG_DIFF})

    rm -rf $TMP

    if [[ $count -ge 1 ]];then
        notify_desktop
    fi

    unset count

    sleep $INTERVAL
done
